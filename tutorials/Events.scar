----------------------------------------------------------------------------------------------------------------
-- SCAR Example Events script
-- (c) 2004 Relic Entertainment Inc.
--
-- This script demonstrates how to start NISlets and Intel events
--
-- NISlets and Intel Events have different priortities when started with Event_Start.
-- The utility functions Util_StartNISlet and Util_StartIntel simply call Event_Start
-- with priorities 0 for NISlet and 1 for Intel events.  In the event system, the highest
-- priority is given to 0.
--
-- When playing events, the following rules apply
-- 1) If you are starting an event that has higher priority than the current event, then
--      the current event will be skipped.
-- 2) If you are starting an event that has a lower or equal priority than the current event,
--      then the new event will be queud.
-- 3) Events are queued based on their priorities, so higher priorities will always play
--      before low priorities
-- 4) Skipping an event using Esc will only skip the current event, so if
--      there are more events in the queue, the esc key will have to get pressed for each
--      of them
-- 
-- This means that if you start a NISlet while an Intel event is playing, the intel event
--  will be skipped, and the NISlet will start; however, if you start an Intel event while
--  a NISlet is playing, the Intel event will be queued to play when it gets a chance.


EVENTS={}

EVENTS.NIS1 = function()
    print("NIS1 START")
    
    CTRL.W40k_Letterbox( true, 2 )
    Event_Wait()
        
    --CTRL.Event_Delay( 5 )
    --Event_Wait()
    
    CTRL.W40k_Letterbox( false, 2 )
    Event_Wait()
    
    print("NIS1 END")
end

EVENTS.NIS2 = function()
    print("NIS2 START")
    
    CTRL.W40k_Letterbox( true, 2 )
    Event_Wait()
        
    --CTRL.Event_Delay( 5 )
    --Event_Wait()
    
    CTRL.W40k_Letterbox( false, 2 )
    Event_Wait()
    
    print("NIS2 END")
end

EVENTS.INTEL1 = function()
    print("INTEL1 START")
        
    CTRL.Actor_PlaySpeech( ACT.Gabriel, 200002 )
    Event_Wait()
    
    --CTRL.Event_Delay( 5 )
    --Event_Wait()
    
    print("INTEL1 END")
end

EVENTS.INTEL2 = function()
    print("INTEL2 START")
        
    CTRL.Actor_PlaySpeech( ACT.Gabriel, 242000 )
    Event_Wait()
    
    --CTRL.Event_Delay( 5 )
    --Event_Wait()
    
    print("INTEL2 END")
end

-- Queue up a bunch of events
Util_StartIntel     ( EVENTS.INTEL1 )
Util_StartNIS       ( EVENTS.NIS1 )
Util_StartIntel     ( EVENTS.INTEL1 )
Util_StartNIS       ( EVENTS.NIS2 )
Util_StartIntel     ( EVENTS.INTEL2 )
Util_StartIntel     ( EVENTS.INTEL2 )

-- The actual order they will get played in:
-- *EVENTS.INTEL1 : This event would get skipped when NIS1 is started
-- EVENTS.NIS1
-- EVENTS.NIS2
-- EVENTS.INTEL1
-- EVENTS.INTEL2
-- EVENTS.INTEL2



